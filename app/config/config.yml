imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }

# Put parameters here that don't need to change on each machine where the app is deployed
# http://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: en

framework:
    #esi:             ~
    translator:      { fallbacks: ["%locale%"] }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    #serializer:      { enable_annotations: true }
    templating:
        engines: ['twig']
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # http://symfony.com/doc/current/reference/configuration/framework.html#handler-id
        handler_id:  session.handler.native_file
        save_path:   "%kernel.root_dir%/../var/sessions/%kernel.environment%"
    fragments:       ~
    http_method_override: true
    assets:
        version: '0.23'
        version_format: '%%s?version=%%s'
    php_errors:
        log: true

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"

# Doctrine Configuration
doctrine:
    dbal:
        driver:   pdo_mysql
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: "%kernel.root_dir%/data/data.db3"
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #     path:     "%database_path%"

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }

vich_uploader:
    db_driver: orm
    mappings:
        photo:
            uri_prefix:         %photos.uri_prefix%
            upload_destination: %upload_destination.photo%
            namer:              vich_uploader.namer_uniqid

liip_imagine:
    resolvers:
       default:
          web_path: ~

    filter_sets:
        cache: ~
        standard:
            quality: 75
            filters:
                thumbnail: { size: [2400, 2400], mode: inset }
        preview:
            quality: 50
            filters:
                thumbnail: { size: [1024, 1024], mode: inset }
        thumb:
            quality: 30
            filters:
                thumbnail: { size: [640, 640], mode: inset }
        logo:
            quality: 85
            filters:
                thumbnail: { size: [200, 200], mode: inset }


fos_user:
    db_driver: orm # other valid values are 'mongodb' and 'couchdb'
    firewall_name: main
    user_class: AppBundle\Entity\User
    from_email:
        address:        noreply@fahrradstadt.hamburg
        sender_name:    Fahrradstadt Hamburg
    registration:
        confirmation:
            enabled:    true # change to true for required email confirmation

hwi_oauth:
    # list of names of the firewalls in which this bundle is active, this setting MUST be set
    firewall_names: [main]

    resource_owners:
        facebook:
            type:                facebook
            client_id:           %facebook.client_id%
            client_secret:       %facebook.client_secret%
            scope:               email
            infos_url:           https://graph.facebook.com/me?fields=id,name,email,first_name,last_name,picture.type(large)
            paths:
                email:          email
                profilepicture: picture.data.url
        strava:
            type:                strava
            client_id:           %strava.client_id%
            client_secret:       %strava.client_secret%
        twitter:
            type:                twitter
            client_id:           %twitter.client_id%
            client_secret:       %twitter.client_secret%
            options:
                include_email: true

sonata_block:
    default_contexts: [cms]
    blocks:
        # enable the SonataAdminBundle block
        sonata.admin.block.admin_list:
            contexts: [admin]
        # ...

knp_paginator:
    page_range: 5                      # default page range used in pagination control
    default_options:
        page_name: page                # page query parameter name
        sort_field_name: sort          # sort field query parameter name
        sort_direction_name: direction # sort direction query parameter name
        distinct: true                 # ensure distinct results, useful when ORM queries are using GROUP BY statements
    template:
        pagination: AppBundle:Pagination:twitter_bootstrap_v4_pagination.html.twig     # sliding pagination controls template
        sortable: KnpPaginatorBundle:Pagination:sortable_link.html.twig # sort link template

fos_elastica:
    clients:
        default: { host: localhost, port: 9200, logger: false }
    indexes:
        fahrradstadt:
            client: default
            finder:
            types:
                photo:
                    mappings:
                        id: ~
                        title: ~
                        description: ~
                        user: ~
                        location: ~
                        pin: { type: geo_point }
                    persistence:
                        driver: orm
                        model: AppBundle\Entity\Photo
                        provider: ~
                        listener: ~
                        finder: ~

sonata_seo:
    encoding:         UTF-8
    page:
        title:            Fahrradstadt.Hamburg
        default:          sonata.seo.page.default
        metas:
            name:
                keywords:             Radfahren, Hamburg, Radsport, Fahrrad, radeln
                description:          'Fahrradstadt.Hamburg: Weil Radfahren in Hamburg Spaß machen kann'
                robots:               index, follow
                'twitter:site':       '@calderacc'
                'twitter:creator':    '@maltehuebner'
            property:
                'fb:app_id':          '216780188685195'
                'og:type':            Website
                'og:site_name':       Fahrradstadt.Hamburg
                'og:description':     'Fahrradstadt.Hamburg: Weil Radfahren in Hamburg Spaß machen kann'
                'og:locale':          de_DE

            http-equiv:
                'Content-Type':         text/html; charset=utf-8

            charset:
                UTF-8:    ''

        head:
            'xmlns':              http://www.w3.org/1999/xhtml
            'xmlns:og':           http://opengraphprotocol.org/schema/
            'xmlns:fb':           "http://www.facebook.com/2008/fbml"
